I'm using Dan Shiffman's Server-Side Programming and Databases with Node.js YouTube course to complete this project

Steps using Navigator geolocation application

Step 1: check is geolocation is available using

<script>
if ("geolocation" in navigator) {
  console.log('geolocation is available');
} else {
console.log('geolocation IS NOT available');
}
</script>

===============================================================================================================================================
Step 2: once we've verified that it is available we now want to geolocate

if ("geolocation" in navigator) {
  console.log('geolocation is available');
  navigator.geolocation.getCurrentPosition(position => {
  //uses the arrow function to prompt the console to show the position object when its ready in the console
    console.log(position);

  });
} else {
console.log('geolocation IS NOT available');
}
</script>

will get a pop up in the browser to ask is the server that I or my client is on which I created, can access their geo location.
They can either choose to allow or block. Has to be explicitly allowed by the user

<h1>Data Selfie App</h1>

<p>
  latitude: <span id="latitude"></span>&deg;</br>
  longitude: <span id="longitude"></span>&deg;</br>
</p>

this code is displaying the cordinates in the broswer, and the (&deg adds the degree symbol to the end)

==================================================================================================================================================

step 3: send the geolocation information to the server

key concept for video 2.2 Geolocation Web API - Working with Data and APIs in JavaScript: how to communicate data that's
extracted in the client and send it to the server and save it to the database


Video 2.3 Post Request with fetch() - working with Data and APIs in Javascript by Dan Shiffman

Post with fetch()

In this video, Dan is doing something important, a key feature here

* take Data from the client, the latitude and longitude, and send it to the server and have the server to eventually
save that user information into a data base

* not there, just want the client to execute its own client side JavaScript, gets the latitude and longitude, and sends that data to the server, and the
server can just console.log it for now

(Going to need to look at three things to do this)

* Routing - how do I set up a route in express. The end point for the API
  the address at which I will send the data to and later also make a request to receive some data
* JSON Parsing - need the route when it receives data to understand that data as JSON and make it readable
  in our code. Also need to look at adapting the fetch function to specify a POST request, a request that is posting
  data
* Also need to look at adapting the fetch function for adapting the fetch() function, to specify a POST Request
  request, that is posting data or sending data to the server

  -lets start with the route. We want to set up a route on my server, so the way that we do that is by specifying
   that, this particular route, will either be a GET or a POST. In this case we expect a POST request

* we now have a server that hosts a static file, so when we go and load the server into our browser, we see index.html

  - the javaScript locates the html, geolocates the latitude and longitude and sends that with the POST to the server
  - the server then receives it and sends that with a POST to the server
  - the server receives it, console logs it out, and sends it back saying, I got it. The data is exchanged


=========================================================================================================================================================================================================================================
